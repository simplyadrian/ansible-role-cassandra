---
- name: "Create jdk install directory"
  file: path="{{jdk_install_path}}" state=directory

- name: "Register installed java version"
  shell: java -version 2>&1 | head -n 1 | awk -F '"' '{print $2}'
  register: java_version_result

- name: "Include the install java task"
  include: install_java.yml
  when: java_version_result.stdout.find("{{jdk_version}}") == -1

- name: "Install libc"
  action: apt pkg=libc6-i386 state=installed
  when: (ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian')

- name: "Install libjna-java"
  action: apt pkg=libjna-java state=installed
  become_user: root

- name: "Register debian version"
  shell: "lsb_release -c|cut -f2"
  register: debian_codename_result

- name: "Install non-free apt repository"
  apt_repository: repo="deb {{debian_mirror}} {{debian_codename_result.stdout}} main contrib non-free" state=present
  when: (ansible_distribution == 'Debian')

- name: "Register installed cassandra version"
  shell: "dpkg -s cassandra|grep Version|cut -d' ' -f2"
  register: cassandra_version_result

- debug: msg="Cassandra {{cassandra_version_result.stdout}} JDK {{java_version_result.stdout}}"

- name: "Include install_cassandra task"
  include: "install_cassandra.yml"
  when: cassandra_version_result.stdout.find("{{cassandra_version}}") == -1

- name: "Include initialize_cluster task"
  include: initialize_cluster.yml
  when: "{{cassandra_initialize_cluster}}"

- name: "Start cassandra service"
  service: name=cassandra state=started
  become: true
